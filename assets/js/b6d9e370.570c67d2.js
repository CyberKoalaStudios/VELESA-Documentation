"use strict";(self.webpackChunkvelesa_documentation=self.webpackChunkvelesa_documentation||[]).push([[487],{9566:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>r});var n=i(4848),a=i(8453);const s={sidebar_position:2,title:"Functions"},o=void 0,c={id:"animation-module/anim-instance/functions",title:"Functions",description:"Get Raw Aim Offset Pitch",source:"@site/versioned_docs/version-5.3.2/animation-module/anim-instance/functions.mdx",sourceDirName:"animation-module/anim-instance",slug:"/animation-module/anim-instance/functions",permalink:"/VELESA-Documentation/docs/animation-module/anim-instance/functions",draft:!1,unlisted:!1,editUrl:"https://github.com/CyberKoalaStudios/VELESA-Documentation/edit/master/versioned_docs/version-5.3.2/animation-module/anim-instance/functions.mdx",tags:[],version:"5.3.2",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Functions"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/VELESA-Documentation/docs/animation-module/anim-instance/overview"},next:{title:"Overview",permalink:"/VELESA-Documentation/docs/animation-module/locomotion-component/overview"}},l={},r=[{value:"Get Raw Aim Offset Pitch",id:"get-raw-aim-offset-pitch",level:2},{value:"Get Raw Aim Offset Yaw",id:"get-raw-aim-offset-yaw",level:2},{value:"Calculate Aim Offset Rotator",id:"calculate-aim-offset-rotator",level:2},{value:"Get Delta Aim Pitch",id:"get-delta-aim-pitch",level:2},{value:"Get Delta Aim Yaw",id:"get-delta-aim-yaw",level:2},{value:"Calculate Mesh Velocity",id:"calculate-mesh-velocity",level:2},{value:"Calculate Direction Angle",id:"calculate-direction-angle",level:2},{value:"Is Rotating",id:"is-rotating",level:2},{value:"Is Rotating Left",id:"is-rotating-left",level:2},{value:"Get Locomotion Component",id:"get-locomotion-component",level:2}];function d(e){const t={code:"code",h2:"h2",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"get-raw-aim-offset-pitch",children:"Get Raw Aim Offset Pitch"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Get Raw Aim Offset Pitch"}),' gets the controller\'s pitch that takes network\nreplication into account. Value is internally calculated by unwinding the\nrotation to its "shortest route" rotation.']}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Get Raw Aim Offset Pitch",src:i(7444).A+"",width:"378",height:"177"})}),"\n",(0,n.jsx)(t.h2,{id:"get-raw-aim-offset-yaw",children:"Get Raw Aim Offset Yaw"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Get Raw Aim Offset Yaw"})," gets the controller's yaw that takes network\nreplication into account."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Get Raw Aim Offset Yaw",src:i(8607).A+"",width:"337",height:"172"})}),"\n",(0,n.jsx)(t.h2,{id:"calculate-aim-offset-rotator",children:"Calculate Aim Offset Rotator"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Calculate Aim Offset Rotator"})," calculates rotation from aim offset.\nUseful for IK."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Calculate Aim Offset Rotator",src:i(2758).A+"",width:"449",height:"303"})}),"\n",(0,n.jsx)(t.h2,{id:"get-delta-aim-pitch",children:"Get Delta Aim Pitch"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Get Delta Aim Pitch"})," calculates the remaining aim pitch until reaching target\nvalue."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Get Delta Aim Pitch",src:i(8628).A+"",width:"390",height:"206"})}),"\n",(0,n.jsx)(t.h2,{id:"get-delta-aim-yaw",children:"Get Delta Aim Yaw"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Get Delta Aim Yaw"})," calculates the remaining aim yaw until reaching target value."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Get Delta Aim Yaw",src:i(4143).A+"",width:"392",height:"219"})}),"\n",(0,n.jsx)(t.h2,{id:"calculate-mesh-velocity",children:"Calculate Mesh Velocity"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Calculate Mesh Velocity"})," calculates the velocity in relation to the skeletal\nmesh's root bone orientation."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Calculate Mesh Velocity",src:i(7714).A+"",width:"528",height:"256"})}),"\n",(0,n.jsx)(t.h2,{id:"calculate-direction-angle",children:"Calculate Direction Angle"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Calculate Direction Angle"})," calculates angle for movement direction relative to\nthe mesh's root bone rotation."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Calculate Direction Angle",src:i(8777).A+"",width:"426",height:"264"})}),"\n",(0,n.jsx)(t.h2,{id:"is-rotating",children:"Is Rotating"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Is Rotating"})," checks whether skeletal mesh is rotating."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Is Rotating",src:i(2605).A+"",width:"410",height:"254"})}),"\n",(0,n.jsx)(t.p,{children:"Returns true, if skeletal mesh is rotating. Otherwise, false."}),"\n",(0,n.jsx)(t.h2,{id:"is-rotating-left",children:"Is Rotating Left"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Is Rotating Left"})," checks if pawn is leaning to the left side."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Is Rotating Left",src:i(987).A+"",width:"372",height:"176"})}),"\n",(0,n.jsx)(t.p,{children:"Returns true, if leaning left. Otherwise, false."}),"\n",(0,n.jsx)(t.h2,{id:"get-locomotion-component",children:"Get Locomotion Component"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Get Locomotion Component"})," gets ",(0,n.jsx)(t.code,{children:"Locomotion Component"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Get Locomotion Component",src:i(1201).A+"",width:"373",height:"201"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2758:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/calculate-aim-offset-rotator-36774129e70cc1b4552f03a488c50bb8.png"},8777:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/calculate-direction-angle-e41d67148530413af4f62f8831bf9dbe.png"},7714:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/calculate-mesh-velocity-f2303b85077f24f83ecf458d294cbe7b.png"},8628:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/get-delta-aim-pitch-1e122ee27ec0d9a6af38a33a523f2707.png"},4143:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/get-delta-aim-yaw-69551ea41fa86f665fa8b5954cbb1512.png"},1201:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/get-locomotion-component-c21f8b8c6555edbe54215f648cf9f37c.png"},7444:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/get-raw-aim-offset-pitch-75a737603a8170f5922c56873d45ae05.png"},8607:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/get-raw-aim-offset-yaw-7ad7bb97ba8b7ed4f00d6e85ed31e68d.png"},987:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/is-rotating-left-32740a5c004c35035d3b03a27d38add6.png"},2605:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/is-rotating-533786ca5de483f279b919c65417ae12.png"},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(6540);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);