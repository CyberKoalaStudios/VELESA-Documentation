"use strict";(self.webpackChunkvelesa_documentation=self.webpackChunkvelesa_documentation||[]).push([[247],{6013:(e,n,o)=>{o.d(n,{a3:()=>r,f4:()=>s});var t=o(4848),i=o(8453);const s=({children:e})=>{const n={span:"span",...(0,i.R)()};return(0,t.jsx)(n.span,{style:{color:"#faa"},children:e})};function d(e,n,o,s){const d={div:"div",...(0,i.R)()};return(0,t.jsx)(d.div,{style:{backgroundColor:s,color:o,border:"1px "+o+" solid",borderRadius:"5px",padding:".1rem .4rem"},children:n})}const r=({children:e})=>d(0,"Released","#afa","#181")},1878:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var t=o(4848),i=o(8453);o(6013);const s={sidebar_position:3,title:"Types"},d=void 0,r={id:"animation-module/types",title:"Types",description:"Enums",source:"@site/versioned_docs/version-5.3.2/animation-module/types.mdx",sourceDirName:"animation-module",slug:"/animation-module/types",permalink:"/VELESA-Documentation/docs/animation-module/types",draft:!1,unlisted:!1,editUrl:"https://github.com/CyberKoalaStudios/VELESA-Documentation/edit/master/versioned_docs/version-5.3.2/animation-module/types.mdx",tags:[],version:"5.3.2",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Types"},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/VELESA-Documentation/docs/animation-module/locomotion-component/functions"},next:{title:"Blueprint Function Library",permalink:"/VELESA-Documentation/docs/animation-module/bpfl"}},l={},c=[{value:"Enums",id:"enums",level:2},{value:"Rotation Method",id:"rotation-method",level:3},{value:"Aim Method",id:"aim-method",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"enums",children:"Enums"}),"\n",(0,t.jsx)(n.h3,{id:"rotation-method",children:"Rotation Method"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Rotation Method"})," enum value is used to specify which rotation method\nthe ",(0,t.jsx)(n.code,{children:" VELESA Rotation"})," node should use.\nValues:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"No Rotation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Absolute Rotation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Rotate to Movement"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Rotate to Aim"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Rotate to Aim at Angle"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"aim-method",children:"Aim Method"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Aim Method"})," enum value determines how the pawn control rotation should be\ninterpreted as aim offset by ",(0,t.jsx)(n.code,{children:" VELESA Anim Instance"}),".\nValues:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"No Aim Offset"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Free Look"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Free Look (Clamped)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Free Look (Clamped & Locked)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Forward Facing"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Look at Movement Direction"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>r});var t=o(6540);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);