"use strict";(self.webpackChunkvelesa_documentation=self.webpackChunkvelesa_documentation||[]).push([[993],{3256:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>r});var t=i(4848),o=i(8453);const s={sidebar_position:1,title:"Overview"},l=void 0,a={id:"animation-module/anim-instance/overview",title:"Overview",description:"The  VELESA Anim Instance using  VELESA Locomotion Component.",source:"@site/versioned_docs/version-5.3.2/animation-module/anim-instance/overview.mdx",sourceDirName:"animation-module/anim-instance",slug:"/animation-module/anim-instance/overview",permalink:"/VELESA-Documentation/docs/animation-module/anim-instance/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/CyberKoalaStudios/VELESA-Documentation/edit/master/versioned_docs/version-5.3.2/animation-module/anim-instance/overview.mdx",tags:[],version:"5.3.2",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/VELESA-Documentation/docs/getting-started/installation"},next:{title:"Functions",permalink:"/VELESA-Documentation/docs/animation-module/anim-instance/functions"}},d={},r=[{value:"Anim Instance Settings Config",id:"anim-instance-settings-config",level:2},{value:"Locomotion",id:"locomotion",level:3},{value:"Skeletal Mesh",id:"skeletal-mesh",level:3},{value:"Rotation",id:"rotation",level:3},{value:"Anim Instance Runtime Variables",id:"anim-instance-runtime-variables",level:2},{value:"Speed",id:"speed",level:3},{value:"Movement",id:"movement",level:3},{value:"Rotation",id:"rotation-1",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:" VELESA Anim Instance"})," using ",(0,t.jsx)(n.code,{children:" VELESA Locomotion Component"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Create Anim Instance",src:i(4036).A+"",width:"625",height:"531"})}),"\n",(0,t.jsx)(n.h2,{id:"anim-instance-settings-config",children:"Anim Instance Settings Config"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Anim Instance Settings",src:i(8595).A+"",width:"548",height:"406"})}),"\n",(0,t.jsx)(n.h3,{id:"locomotion",children:"Locomotion"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Idle Threshold"})," : Defines the maximum threshold for the actor's speed that\nwill still be handled as being idle."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"skeletal-mesh",children:"Skeletal Mesh"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Root Bone Default"})," : Default rotation of the skeletal mesh's root bone."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Root Name"})," : Name of the skeletal mesh's root bone."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rotation",children:"Rotation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Rotation Speed"})," : Speed of interpolation of the rotation.\nSet to 0 to disable interpolation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Aim Speed"})," : Speed of interpolation of the aim offset.\nSet to 0 to disable interpolation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Start Rotating at Angle"})," : The character will start to turn-in-place if\nthe horizontal aim offset goes beyond this angle."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Aim Clamp"})," : Limits horizontal aim offset."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"anim-instance-runtime-variables",children:"Anim Instance Runtime Variables"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Anim Instance Variables",src:i(6157).A+"",width:"494",height:"901"})}),"\n",(0,t.jsx)(n.h3,{id:"speed",children:"Speed"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Forward Speed"})," : Forward speed of the pawn (X-axis)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Strafe Speed"})," : Strafe speed of the pawn (Y-axis)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Fall Speed"})," : Falling speed of the pawn (Z-axis)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Movement Speed"})," : Movement speed of the pawn."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Movement Speed XY"})," : Movement speed of the pawn limited to the XY-plane."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"movement",children:"Movement"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Idle XY"})," : True, if pawn has no planar movement according to ",(0,t.jsx)(n.code,{children:"IdleThreshold"}),".\nFalling (Z-axis) is ignored."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Idle"})," : True, if pawn has no movement in any direction according to\n",(0,t.jsx)(n.code,{children:"IdleThreshold"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Crouching"})," : True, if pawn is crouching."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Swimming"})," : True, if pawn is swimming."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"In Air"})," : True, if pawn is either flying or falling."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Falling"})," : True, if pawn is falling."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Flying"})," : True, if pawn is flying."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Moving on Ground"})," : True, if pawn is moving on ground."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Normalized Movement Direction"})," : Normalized movement direction of the pawn."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rotation-1",children:"Rotation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Aim Offset Pitch"})," : Current pitch of the aim offset."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Aim Offset Yaw"})," : Current yaw of the aim offset."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Relative Root Rotation"})," :  World-space rotation between the skeletal mesh and\npawn root component."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Direction Angle"})," : The direction angle that describes the movement direction\nrelative to the skeletal mesh's root bone rotation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Lean"})," : Amount of leaning into either direction."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8595:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/anim-instance-settings-e5630c6d14300004cd765355162e9030.png"},6157:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/anim-instance-variables-7207dd8c53fffed0f67902b910aca434.png"},4036:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/create-anim-instance-9e15a98774e995d095d4052126e9a33f.png"},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);