"use strict";(self.webpackChunkvelesa_documentation=self.webpackChunkvelesa_documentation||[]).push([[591],{6013:(e,t,n)=>{n.d(t,{a3:()=>l,f4:()=>o});var i=n(4848),r=n(8453);const o=({children:e})=>{const t={span:"span",...(0,r.R)()};return(0,i.jsx)(t.span,{style:{color:"#faa"},children:e})};function c(e,t,n,o){const c={div:"div",...(0,r.R)()};return(0,i.jsx)(c.div,{style:{backgroundColor:o,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"},children:t})}const l=({children:e})=>c(0,"Released","#afa","#181")},1383:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=n(4848),r=n(8453);n(6013);const o={sidebar_position:3,title:"Types"},c=void 0,l={id:"projectile-module/types",title:"Types",description:"Enums",source:"@site/versioned_docs/version-5.3.2/projectile-module/types.mdx",sourceDirName:"projectile-module",slug:"/projectile-module/types",permalink:"/VELESA-Documentation/docs/projectile-module/types",draft:!1,unlisted:!1,editUrl:"https://github.com/CyberKoalaStudios/VELESA-Documentation/edit/master/versioned_docs/version-5.3.2/projectile-module/types.mdx",tags:[],version:"5.3.2",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Types"},sidebar:"tutorialSidebar",previous:{title:"Helper",permalink:"/VELESA-Documentation/docs/projectile-module/projectile-launcher-component/functions/helper"},next:{title:"Blueprint Function Library",permalink:"/VELESA-Documentation/docs/projectile-module/bpfl"}},s={},d=[{value:"Enums",id:"enums",level:2},{value:"Fire Mode",id:"fire-mode",level:3},{value:"Structs",id:"structs",level:2},{value:"Ricochet Result",id:"ricochet-result",level:3},{value:"Penetration Result",id:"penetration-result",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"enums",children:"Enums"}),"\n",(0,i.jsx)(t.h3,{id:"fire-mode",children:"Fire Mode"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Fire Mode"})," enum value describes the fire mode of the projectile launcher.\nValues:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Semi Auto"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Full Auto"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Burst"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Interruptible Burst"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"Custom"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"structs",children:"Structs"}),"\n",(0,i.jsx)(t.h3,{id:"ricochet-result",children:"Ricochet Result"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Ricochet Result"})," struct holds the calculated data after checking for a possible\nricochet response for the projectile.\nValues:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Should Ricochet"})," : True, if the projectile should ricochet."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Ricochet Chance"})," : The ricochet chance of the projectile on bounce."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Ricochet Angle"})," : The angle of incidence (incoming)."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"penetration-result",children:"Penetration Result"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Penetration Result"})," struct holds the calculated data after checking for a possible\npenetration for the projectile.\nValues:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Should Penetrate"})," : True, if the projectile should penetrate."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Penetrate Hit Result"})," : The hit result of the penetrated object."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Penetration Depth"})," : The calculated penetration depth of the projectile."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Penetration Ratio"})," : The calculated penetration ratio of the projectile based\non penetration distance over depth."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Entry Transform"})," : The calculated transform of the projectile on entry.\nSee: ",(0,i.jsx)(t.a,{href:"/docs/projectile-module/projectile/functions#calculate-hit-transform",children:"CalculateHitTransform()"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Exit Transform"})," : The calculated transform of the projectile on exit.\nSee: ",(0,i.jsx)(t.a,{href:"/docs/projectile-module/projectile/functions#calculate-hit-transform",children:"CalculateHitTransform()"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>l});var i=n(6540);const r={},o=i.createContext(r);function c(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);